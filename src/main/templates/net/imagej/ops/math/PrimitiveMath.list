# Generated unary and binary arithmetic ops with primitive types.
#
# Many of Java's binary numeric operators only work on ints and longs.
# And still more of them purport to work on bytes and shorts, but
# ultimately return int for the result. And most of Java's unary and
# binary Math functions only work on doubles. So rather than generate
# the entire cross-product of types-plus-operations, we do only those
# that are both valid and consistent regarding the return type.

[PrimitiveMath.java]
types = ```
[
	[name: "Integer", primitive: "int",    code: "i", priority: 0.4],
	[name: "Long",    primitive: "long",   code: "l", priority: 0.3],
	[name: "Float",   primitive: "float",  code: "f", priority: 0.2],
	[name: "Double",  primitive: "double", code: "d", priority: 0.1]
]
```
ops = ```
[
	[name: "Add",                operator: "+",           unary: false, aliases: true,  codes: "ilfd", verbs: "adds (+)"],
	[name: "Subtract",           operator: "-",           unary: false, aliases: true,  codes: "ilfd", verbs: "subtracts (-)"],
	[name: "Multiply",           operator: "*",           unary: false, aliases: true,  codes: "ilfd", verbs: "multiplies (*)"],
	[name: "Divide",             operator: "/",           unary: false, aliases: true,  codes: "ilfd", verbs: "divides (*)"],
	[name: "Remainder",          operator: "%",           unary: false, aliases: true,  codes: "ilfd", verbs: "computes the remainder (%) of"],
	[name: "And",                operator: "&",           unary: false, aliases: false, codes: "il",   verbs: "computes the bitwise AND (&) of"],
	[name: "Or",                 operator: "|",           unary: false, aliases: false, codes: "il",   verbs: "computes the bitwise OR (|) of"],
	[name: "Xor",                operator: "^",           unary: false, aliases: false, codes: "il",   verbs: "computes the bitwise XOR (^) of"],
	[name: "LeftShift",          operator: "<<",          unary: false, aliases: true,  codes: "il",   verbs: "computes the signed left shift (<<) of"],
	[name: "RightShift",         operator: ">>",          unary: false, aliases: true,  codes: "il",   verbs: "computes the signed right shift (>>) of"],
	[name: "UnsignedRightShift", operator: ">>>",         unary: false, aliases: true,  codes: "il",   verbs: "computes the unsigned right shift (>>>) of"],
	[name: "Max",                function: "Math.max",    unary: false, aliases: false, codes: "ilfd", verbs: "computes the maximum of"],
	[name: "Min",                function: "Math.min",    unary: false, aliases: false, codes: "ilfd", verbs: "computes the minimum of"],
	[name: "Power",              function: "Math.pow",    unary: false, aliases: false, codes:    "d", verbs: "exponentiate"],
	[name: "Complement",         operator: "~",           unary: true,  aliases: true,  codes: "il",   verbs: "computes the bitwise complement (~) of"],
	[name: "Negate",             operator: "-",           unary: true,  aliases: false, codes: "ilfd", verbs: "negates (-)"],
	[name: "Abs",                function: "Math.abs",    unary: true,  aliases: false, codes: "ilfd", verbs: "computes the absolute value of"],
	[name: "Arccos",             function: "Math.acos",   unary: true,  aliases: false, codes:    "d", verbs: "computes the arccosine of"],
	[name: "Arcsin",             function: "Math.asin",   unary: true,  aliases: false, codes:    "d", verbs: "computes the arcsine of"],
	[name: "Arctan",             function: "Math.atan",   unary: true,  aliases: false, codes:    "d", verbs: "computes the arctangent of"],
	[name: "Ceil",               function: "Math.ceil",   unary: true,  aliases: false, codes:    "d", verbs: "computes the ceiling of"],
	[name: "Cos",                function: "Math.cos",    unary: true,  aliases: false, codes:    "d", verbs: "computes the cosine of"],
	[name: "Cosh",               function: "Math.cosh",   unary: true,  aliases: false, codes:    "d", verbs: "computes the hyperbolic cosine of"],
	[name: "CubeRoot",           function: "Math.cbrt",   unary: true,  aliases: false, codes:    "d", verbs: "computes the cubic root of"],
	[name: "Exp",                function: "Math.exp",    unary: true,  aliases: false, codes:    "d", verbs: "computes the natural exponent of"],
	[name: "Floor",              function: "Math.floor",  unary: true,  aliases: false, codes:    "d", verbs: "computes the floor of"],
	[name: "Log",                function: "Math.log",    unary: true,  aliases: false, codes:    "d", verbs: "computes the natural logarithm of"],
	[name: "Log10",              function: "Math.log10",  unary: true,  aliases: false, codes:    "d", verbs: "computes the base 10 logarithm of"],
	[name: "LogOnePlusX",        function: "Math.log1p",  unary: true,  aliases: false, codes:    "d", verbs: "computes the natural logarithm of one plus"],
	[name: "Round",              function: "Math.round",  unary: true,  aliases: false, codes:   "fd", verbs: "rounds"],
	[name: "Signum",             function: "Math.signum", unary: true,  aliases: false, codes:   "fd", verbs: "computes the signum of"],
	[name: "Sin",                function: "Math.sin",    unary: true,  aliases: false, codes:    "d", verbs: "computes the sine of"],
	[name: "Sinh",               function: "Math.sinh",   unary: true,  aliases: false, codes:    "d", verbs: "computes the hyperbolic sine of"],
	[name: "Sqrt",               function: "Math.sqrt",   unary: true,  aliases: false, codes:    "d", verbs: "computes the square root of"],
	[name: "Tan",                function: "Math.tan",    unary: true,  aliases: false, codes:    "d", verbs: "computes the tangent of"],
	[name: "Tanh",               function: "Math.tanh",   unary: true,  aliases: false, codes:    "d", verbs: "computes the hyperbolic tangent of"]
]
```
