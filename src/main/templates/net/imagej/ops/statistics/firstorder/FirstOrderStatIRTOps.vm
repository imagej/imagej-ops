/*
 * #%L
 * ImageJ software for multidimensional image processing and analysis.
 * %%
 * Copyright (C) 2014 Board of Regents of the University of
 * Wisconsin-Madison and University of Konstanz.
 * %%
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * #L%
 */

package net.imagej.ops.statistics.firstorder;

import net.imagej.ops.statistics.FirstOrderOps;
import net.imglib2.type.numeric.RealType;
import net.imagej.ops.OutputFunction;

/**
 * Static utility class containing built-in ops interfaces.
 * <p>
 * These interfaces are intended to mark all ops using a particular name,
 * regardless of the area of functionality. For example, all ops called "mean"
 * would be marked by implementing the {@code FirstOrderStatIRTOps.MeanIRT} interface, and
 * annotating them with:
 * </p>
	 * <pre>
	 * @Plugin(type = Op.class, name = FirstOrderStatIRTOps.MeanIRT.NAME)
	 * </pre>
 *
 * @author Christian Dietz (University of Konstanz)
 */
public final class FirstOrderStatIRTOps {

	private FirstOrderStatIRTOps() {
		// NB: Prevent instantiation of utility class.
	}
#foreach ($op in $ops)

	/**
	 * Interface marking implementations of {@link FirstOrderOps.${op.iface}} working on {@link Iterable}s of {@link RealType}.
	 */
	public interface ${op.iface}IRT<I extends RealType<I>, O extends RealType<O>> extends OutputFunction<Iterable<I>, O>, FirstOrderOps.${op.iface} {
		// NB: Marker interface
	}
#end

}
