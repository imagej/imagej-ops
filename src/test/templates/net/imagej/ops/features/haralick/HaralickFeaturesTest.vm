/*
 * #%L
 * ImageJ software for multidimensional image processing and analysis.
 * %%
 * Copyright (C) 2014 Board of Regents of the University of
 * Wisconsin-Madison and University of Konstanz.
 * %%
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * #L%
 */

package net.imagej.ops.features.haralick;

import static org.junit.Assert.assertEquals;

import java.util.Map;

import org.junit.Test;

import net.imagej.ops.OpRef;
import net.imagej.ops.features.AbstractFeatureTest;
import net.imagej.ops.image.cooccurrencematrix.MatrixOrientation2D;
import net.imagej.ops.image.cooccurrencematrix.MatrixOrientation3D;
import net.imglib2.type.numeric.real.DoubleType;

/**
 * Testing implementations of {@link HaralickFeature}
 * 
 * @author Daniel Seebacher, University of Konstanz.
 */
public class HaralickFeaturesTest extends AbstractFeatureTest {

#foreach ($op in $ops)
	@Test
	public void test${op.iface}() {
		// empty
		assertEquals("${op.label} empty 2d", ${op.empty2d}, this.ops.haralick().${op.label}(this.empty, 8, 1,
			MatrixOrientation2D.HORIZONTAL).get(), SMALL_DELTA);
		assertEquals("${op.label} empty 3d", ${op.empty3d}, this.ops.haralick().${op.label}(this.empty3d, 8, 1,
			MatrixOrientation3D.HORIZONTAL_DIAGONAL).get(), SMALL_DELTA);

		// constant
		assertEquals("${op.label} constant 2d", ${op.constant2d}, this.ops.haralick().${op.label}(this.constant,
			8, 1, MatrixOrientation2D.HORIZONTAL).get(), SMALL_DELTA);
		assertEquals("${op.label} constant 3d", ${op.constant3d}, this.ops.haralick().${op.label}(this.constant3d,
			8, 1, MatrixOrientation3D.HORIZONTAL_DIAGONAL).get(), SMALL_DELTA);

		// random
		assertEquals("${op.label} random 2d", ${op.random2d}, this.ops.haralick().${op.label}(
			this.random, 8, 1, MatrixOrientation2D.HORIZONTAL).get(), SMALL_DELTA);
		assertEquals("${op.label} random 3d", ${op.random3d}, this.ops.haralick().${op.label}(
			this.random3d, 8, 1, MatrixOrientation3D.HORIZONTAL_DIAGONAL).get(),
			SMALL_DELTA);
	}
#end
}